name: Build ImmortalWrt Optimized

on:
  workflow_dispatch:

env:
  TERM: xterm
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build ImmortalWrt
    steps:
      - name: Start SSH debug session (optional)
        if: ${{ github.event.inputs.ssh_debug == 'true' }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
      - name: 🔧 准备环境
        uses: actions/checkout@v3

      - name: ⏱️ 缓存 dl 和工具链
        uses: actions/cache@v3
        with:
          path: |
            dl
            build_dir/host
            staging_dir/host
          key: ${{ runner.os }}-openwrt-${{ hashFiles('**/feeds.conf.default') }}
          restore-keys: |
            ${{ runner.os }}-openwrt

      - name: Initialize Build Environment (official script)
        run: |
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
          
      - name: 📦 更新 feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Run diy.sh
        run: |
          chmod +x diy.sh
          ./diy.sh

      - name: 📁 加载自定义配置
        run: |
          [ -f .config ] && echo "已加载自定义 .config"

      - name: ⚙️ 编译固件
        run: |
          make defconfig
          make download -j$(nproc)
          make -j$(nproc) V=s

      - name: Package and Rename Firmware
        run: |
          mkdir -p output
          DATE=$(date +%Y%m%d-%H%M)
          find bin/targets/ -name "*combined*.img*" -exec cp {} output/ \;
          cd output
          for f in *; do mv "$f" "immortalwrt-x86_64-$DATE-$f"; done

      - name: 📤 上传固件到 GitHub Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: immortalwrt-x86_64
          path: output

      - name: Archive modified config files
        run: |
          mkdir -p config_backup
          cp .config feeds.conf.default config_backup/
          zip -r config_files.zip config_backup
      - name: Upload config as artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: modified-config
          path: config_files.zip
      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: x86_64-${{ github.run_number }}
          name: 自动编译固件 ${{ github.run_id }}
          body: |
            固件架构：x86_64  
            编译时间：${{ github.run_started_at }}  
            包含常用插件和中文界面
          files: output/*
      - name: 生成已选插件列表
        working-directory: ImmortalWrt
        run: |
          grep '^CONFIG_PACKAGE_' .config | grep '=y' | cut -d_ -f3- | cut -d= -f1 | sort > selected_plugins.txt
      - name: 发布到 GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: x86_64-${{ github.run_number }}
          name: Auto Build ImmortalWrt ${{ github.run_id }}
          body_path: ImmortalWrt/selected_plugins.txt
          files: |
            ImmortalWrt/bin/targets/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
